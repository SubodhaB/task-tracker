name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Triggers on push to the main branch
  pull_request:
    branches:
      - main  # Triggers on pull requests targeting the main branch

jobs:
  # Job for testing and linting the code
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]  # Test against Node.js versions 14, 16, and 18
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm test  # Adjust this according to your testing framework (Jest, Mocha, etc.)

      - name: Security Scan with Snyk
        run: npm install -g snyk && snyk test  # Example with Snyk for security testing

  # Job for deployment to GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure deployment only happens after successful tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build the Application
        run: npm run build  # Adjust according to your build script

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist  # Replace with your build output directory
